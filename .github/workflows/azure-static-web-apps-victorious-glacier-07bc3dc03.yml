name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  code_quality_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Ensure Code Quality
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm ci:lint

      - name: Run Typecheck
        run: pnpm ci:typecheck

      - name: Run Tests
        run: pnpm ci:test

  build_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build Job
    steps:
      - name: Set timezone
        run: sudo timedatectl set-timezone Europe/Amsterdam

      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Dependencies
        run: pnpm install

      - name: Generate Site
        run: pnpm generate

      - name: Copy config
        run: cp staticwebapp.config.json .output/public

      - name: Zip generated site (no compression)
        run: |
          cd .output
          zip -r -0 ../generated-site.zip public

      - name: Upload zipped site
        uses: actions/upload-artifact@v4
        with:
          name: generated-site-zip
          path: generated-site.zip

  deploy_job:
    needs: build_job
    runs-on: ubuntu-latest
    name: Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Download zipped site
        uses: actions/download-artifact@v4
        with:
          name: generated-site-zip
          path: .

      - name: Unzip generated site
        run: unzip generated-site.zip -d .output

      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_VICTORIOUS_GLACIER_07BC3DC03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "/.output/public" # App source code path
          api_location: "/src/api/Bach.Software.API" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          skip_app_build: true

  playwright_job:
    needs: build_job
    runs-on: ubuntu-latest
    name: Perform Playwright Tests
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Dependencies
        run: pnpm install

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Download zipped site
        uses: actions/download-artifact@v4
        with:
          name: generated-site-zip
          path: .

      - name: Unzip generated site
        run: unzip generated-site.zip -d .output

      - name: Run Playwright tests
        run: pnpm ci:playwright

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_VICTORIOUS_GLACIER_07BC3DC03 }}
          action: "close"
          app_location: "/.output/public" # App source code path
          api_location: "/src/api/Bach.Software.API" # Api source code path - optional
